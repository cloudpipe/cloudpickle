name: Python application

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python_version: [3.7]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install project and dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .
        pip install -r dev-requirements.txt
        python ci/install_coverage_subprocess_pth.py
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Run linting
      run: |
        # stop the build if there are Python syntax errors or undefined names
        python -m flake8 . --count --verbose --select=E901,E999,F821,F822,F823 \
          --show-source --statistics
        # exit-zero treats all errors as warnings.  The GitHub editor is 127
        # chars wide
        python -m flake8 . --count --exit-zero --max-complexity=10 \
          --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest

  downstream-build:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[ci distributed]')"
    env:
      PROJECT: distributed
      TEST_REQUIREMENTS: pytest pytest-timeout numpy pandas mock bokeh fsspec>=0.3.3
      PROJECT_URL: https://github.com/dask/distributed.git
      PYTEST_ADDOPTS: "--timeout-method=thread --timeout=300 -m \"not avoid_travis\" -k \"not test_dask_scheduler and not test_workspace_concurrency and not test_defaults and not test_service_hosts and not test_logging_file_config and not test_hostport and not test_workdir_simple and not test_two_workspaces_in_same_directory and not test_recompute_released_results and not test_connection_args and not test_listen_args and test_cleanup\""  # remove `and test_cleanup` when before merging
    strategy:
      matrix:
        python_version: [3.7]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install project and dependencies
    - uses: .github/actions/install_downstream_project.yml
    - name: Test the downstream project
    - uses: .github/actions/test_downstream_project.yml
