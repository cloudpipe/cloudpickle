language: python
sudo: false
python:
  - "2.6"
  - "2.7"
  - "3.3"
  - "3.4"
  - "pypy"
matrix:
  include:
    # 0.14.0 is the last version with the old categorical system
    - python: 3.3
      env: PANDAS_VERSION_STR="=0.14.0"
    - python: 2.7
      env: PANDAS_VERSION_STR="=0.14.0"
# This disables sudo, but makes builds start much faster
# See http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/
sudo: false
before_install:
  # Escape Travis virtualenv
  - if [[ $TRAVIS_PYTHON_VERSION != 'pypy'* ]]; then deactivate; fi
  # See: http://conda.pydata.org/docs/travis.html
  - if [[ $TRAVIS_PYTHON_VERSION != 'pypy'* ]]; then wget http://repo.continuum.io/miniconda/Miniconda3-3.6.0-Linux-x86_64.sh -O miniconda.sh; fi
  - if [[ $TRAVIS_PYTHON_VERSION != 'pypy'* ]]; then bash miniconda.sh -b -p $HOME/miniconda; fi
  - if [[ $TRAVIS_PYTHON_VERSION != 'pypy'* ]]; then export PATH="$HOME/miniconda/bin:$PATH"; fi
  - if [[ $TRAVIS_PYTHON_VERSION != 'pypy'* ]]; then hash -r; fi
  - if [[ $TRAVIS_PYTHON_VERSION != 'pypy'* ]]; then conda config --set always_yes yes --set changeps1 no; fi
  - if [[ $TRAVIS_PYTHON_VERSION != 'pypy'* ]]; then conda update -q conda; fi
  - if [[ $TRAVIS_PYTHON_VERSION != 'pypy'* ]]; then conda info -a; fi
  - if [[ $TRAVIS_PYTHON_VERSION != 'pypy'* ]]; then conda create -q -n testenv python=$TRAVIS_PYTHON_VERSION numpy scipy pip pandas; fi
  - if [[ $TRAVIS_PYTHON_VERSION != 'pypy'* ]]; then source activate testenv; fi
install:
  - pip install .
  - pip install -r dev-requirements.txt
script:
  - PYTHONPATH='.:tests' py.test
